paths:
  /users:
    get:
      tags:
        - users
      summary: users list
      x-swagger-router-controller: universal.search
      x-swagger-public-field:
        - firstName
        - lastName
      parameters:
        - $ref: '#/parameters/q'
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/sorting'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/fields'

      responses:
        '200':
          description: cars list
          schema:
            $ref: '#/definitions/user'
    put:
      tags:
        - users
      summary: insert new user
      x-swagger-router-controller: universal.insertOrCount
      parameters:
        - name: modeldata
          in: body
          required: true
          schema:
            $ref: '#/definitions/userInput'
      responses:
        '200':
          description: user added
          schema:
            $ref: '#/definitions/user'

    delete:
      tags:
        - users
      summary: delete user
      x-swagger-router-controller: universal.remove
      parameters:
        - name: _id
          in: query
          required: true
          type: string
      responses:
        '200':
          description: deleted user
          schema:
            $ref: '#/definitions/user'

    patch:
      tags:
        - users
      summary: for updated car document
      x-swagger-router-controller: universal.update
      parameters:
        - name: modeldata
          in: body
          required: true
          schema:
            $ref: '#/definitions/userUpdate'
      responses:
        '200':
          description: updated user
          schema:
            $ref: '#/definitions/user'

  /users/login:
    post:
      x-swagger-router-controller: Users.login
      tags:
        - users
      description: Authenticate using email and password
      parameters:
        - in: body
          name: modeldata
          description: An object containing the user credentials.
          required: true
          schema:
            $ref: '#/definitions/Credentials'
      responses:
        '200':
          description: user Profile.
          schema:
            $ref: '#/definitions/user'

definitions:
  userInput:
    type: object
    properties:
      firstName:
        type: string
        required: true
      lastName:
        type: string
        required: true
      password:
        type: string
        required: true
        minLength: 6
      email:
        type: string
        format: email
        required: true
        x-swagger-unique: true

  userUpdate:
    type: object
    properties:
      _id:
        type: string
        format: mongoId

  user:
    type: object
    properties:
      _id:
        type: string
      firstname:
        type: string
      lastname:
        type: string
      email:
        type: string
      totalComments:
        type: number
      totalRatings:
        type: number
      totalPhotos:
        type: number

  Credentials:
    type: object
    properties:
      email:
        type: string
        format: email
        required: true
      password:
        type: string
        required: true